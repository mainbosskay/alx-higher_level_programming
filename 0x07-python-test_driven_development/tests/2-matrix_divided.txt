Test for the matrix_divided function

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test case 1: Dvision of matrix
>>> matrix = [[4, 2, 8], [6, 5, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[2.0, 1.0, 4.0], [3.0, 2.5, 4.5]]

Test case 2: TypeError, matrix is not a list
>>> matrix = 348
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case 3: TypeError, rows that have different sizes in matrix
>>> matrix = [[4, 3, 7], [8, 5, 3], [7, 5]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Test case 4: TypeError, divisor is neither an integer nor float
>>> matrix = [[4, 1], [5, 8]]
>>> div = "str"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: div must be a number

Test case 5: ZeroDivisionError, divisor is zero
>>> matrix = [[3, 6], [7, 5]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Test case 6: All values == 0.0 when div is float('inf')
>>> matrix = [[4, 7, 3], [2, 5, 6]]
>>> div = float('inf')
>>> matrix_divided(matrix, div)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test case 7: TypeError, one argument is missing
>>> matrix = [[3, 7, 2], [4, 5, 9]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test case 8: TypeError, two arguments are missing
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
