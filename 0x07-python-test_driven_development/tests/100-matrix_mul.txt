Test for matrix_mul function

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

Test case 1: Multiplication of matrix
>>> matrix_mul([[4, 5, 2], [2, 4, 6]], [[4, 2], [3, 2], [2, 1]])
[[35, 20], [32, 18]]

Test case 2: TypeError, m_a is not a list
>>> matrix_mul({2, 4, 6}, [[2, 8], [7, 9]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

Test case 3: TypeError, m_b is not a list
>>> matrix_mul([[4, 8], [3, 6]], 4781)
Traceback (most recent call last):
...
TypeError: m_b must be a list

Test case 4: TypeError, m_a is not a list of lists
>>> matrix_mul([(225), [3, 6]], [[4, 5], [8, 6]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

Test case 5: TypeError, m_b is not a list of lists
>>> matrix_mul([[4, 5], [4, 16]], [(442), [8, 4]])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

Test case 6: ValueError, m_a is empty
>>> matrix_mul([[]], [[4, 8], [3, 6]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

Test case 7: ValueError, m_b is empty
>>> matrix_mul([[4, 6], [3, 5]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

Test case 8: TypeError, m_a contains non numeric values
>>> matrix_mul([[2, 'k'], [3, 't']], [[4, 6], [7, 8]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

Test case 9: TypeError, m_b contains non numeric values
>>> matrix_mul([[3, 6], [4, 5]], [['j', 'd'], [4, 'k']])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

Test case 10: TypeError, m_a has different sized rows
>>> matrix_mul([[3, 5], [2, 4, 5]], [[3, 5], [5, 7]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

Test case 11: TypeError, m_b has different sized rows
>>> matrix_mul([[4, 6], [8, 6]], [[5, 7, 8], [6, 8]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

Test case 12: ValueError, m_a and m_b cannot be multiplied
>>> matrix_mul([[3, 5], [4, 8]], [[5, 7]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

Test case 13: TypeError, an argument is missing
>>> matrix_mul([[3, 16], [2, 8]])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Test case 14: TypeError, two arguments are missing
>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
